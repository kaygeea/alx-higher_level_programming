The `3-say_my_name.py` module
=============================

Guide to the usage of and specification for the `say_my_name` function
----------------------------------------------------------------------

The `say_my_name` function is created and defined in the `3-say_my_name.py` module. It is expected to receive two string arguments:
`first_name` and `last_name`, with `last_name` set to an empty string as a default, input them into a longer string and print the full string.

The Implementation
==================

Import the module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

The function handles simple string inputs:
    
    >>> say_my_name("Ciroma", "Chukwudi")
    My name is Ciroma Chukwudi

    >>> say_my_name("Megas", "XLR")
    My name is Megas XLR

    >>> say_my_name("Formation", "4-3-3")
    My name is Formation 4-3-3

The function can receive and handle one argument, which will be treated as firts_name, as the second argument is set to an empty string by default
However, the output will be printed with a whitespace for the missing second argument:

    >>> say_my_name("Tristan")
    My name is Tristan 

The function expects that both arguments are strings. If either argument is a non-string,
a TypeError will be raised with a corresponding error message:

    >>> say_my_name(21, "JumpStreet")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name("John", 3.16)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

    >>> say_my_name(None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
